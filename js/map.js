// 1 block = 16x10
blockTemplate = [
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 0
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 1
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 2
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 3
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 4
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 5
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 6
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 7
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 8
	[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1] // 9
	];
block0 = [
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 0
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 1
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 2
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 3
	[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0], // 4
	[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0], // 5
	[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0], // 6
	[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0], // 7
	[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0], // 8
	[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1] // 9
	];
block1 = [
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 0
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 1
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 2
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 3
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 4
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 5
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 6
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 7
	[0,0,0,0,0,4,0,0,3,0,0,0,0,0,0,0], // 8
	[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1] // 9
	];
block2 = [
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 0
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 1
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 2
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 3
	[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1], // 4
	[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1], // 5
	[0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0], // 6
	[0,0,1,1,1,1,0,0,0,0,1,0,0,0,0,0], // 7
	[1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0], // 8
	[1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1] // 9
	];
block3 = [
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 0
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 1
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 2
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 3
	[1,1,1,0,0,0,1,1,1,1,0,0,1,1,1,0], // 4
	[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0], // 5
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 6
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 7
	[0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0], // 8
	[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1] // 9
	];
block4 = [
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 0
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 1
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 2
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 3
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 4
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 5
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 6
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 7
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 8
	[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1] // 9
	];

map = [ block0,block1,block2,block3,block4 ];

function createMap(blockSize){
	var mapWidth = blockSize * map[0][0].length;
	for (var i=0; i<map.length; i++){
		for (var y=0; y<map[0].length; y++){
			for (var x=0; x<map[0][0].length; x++){
				switch( map[i][y][x] ){
					case 1:
						addonPlatform.add( new Platform(x*blockSize+i*mapWidth, y*blockSize, blockSize-2, blockSize-2) );
						break;
					case 2:
						addonPlatform.add( new Spring(x*blockSize+i*mapWidth, y*blockSize, blockSize-2, blockSize-2, 0) );
						break;
					case 3:
						addonPlatform.add( new Spring(x*blockSize+i*mapWidth, y*blockSize, blockSize-2, blockSize-2, 1) );
						break;
					case 4:
						addonPlatform.add( new Spring(x*blockSize+i*mapWidth, y*blockSize, blockSize-2, blockSize-2, -1) );
						break;
				}
			}
		}
	}
}